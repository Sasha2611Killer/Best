Drawing = Drawing
mousemoverel = mousemoverel

local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local LocalPlr = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local CoreGui = game:GetService("CoreGui")
local TargetPlr, CamlockPlr
local Camera =  game:GetService("Workspace").CurrentCamera
local Stats = game:GetService("Stats")

local TargB1nd, CamB1nd =  false,false

local Workspace = game:GetService("Workspace")


local TargResolvePos, CamResolvePos

local Connections = {}

local B1Lib = loadstring(game:HttpGet("https://pastebin.com/xPccfaLf"))()

local Sense = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Sirius/request/library/sense/source.lua'))()

Sense.Load()

local BodyGui = Instance.new("ScreenGui")
local BodyMain = Instance.new("Frame")
local Head = Instance.new("TextButton")
local HumanoidRootPart = Instance.new("TextButton")
local LeftUpperArm = Instance.new("TextButton")
local RightUpperArm = Instance.new("TextButton")
local RightFoot = Instance.new("TextButton")
local LeftFoot = Instance.new("TextButton")

--Properties:

BodyGui.Name = "BodyGui"
BodyGui.Parent = game.StarterGui["Возможно делаю"]
BodyGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

BodyMain.Name = "BodyMain"
BodyMain.Parent = BodyGui
BodyMain.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
BodyMain.BorderColor3 = Color3.fromRGB(0, 0, 0)
BodyMain.BorderSizePixel = 0
BodyMain.Position = UDim2.new(0.0622441992, 0, 0.163170159, 0)
BodyMain.Size = UDim2.new(0.250682116, 0, 0.653292239, 0)
BodyMain.Visible = false

Head.Name = "Head"
Head.Parent = BodyMain
Head.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Head.BorderColor3 = Color3.fromRGB(0, 0, 0)
Head.BorderSizePixel = 0
Head.Position = UDim2.new(0.384353727, 0, 0.149413556, 0)
Head.Size = UDim2.new(0.207482994, 0, 0.131233588, 0)
Head.Font = Enum.Font.SourceSans
Head.Text = ""
Head.TextColor3 = Color3.fromRGB(0, 0, 0)
Head.TextSize = 14.000

HumanoidRootPart.Name = "HumanoidRootPart"
HumanoidRootPart.Parent = BodyMain
HumanoidRootPart.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
HumanoidRootPart.BorderColor3 = Color3.fromRGB(0, 0, 0)
HumanoidRootPart.BorderSizePixel = 0
HumanoidRootPart.Position = UDim2.new(0.319727898, 0, 0.314437479, 0)
HumanoidRootPart.Size = UDim2.new(0.340136051, 0, 0.227125898, 0)
HumanoidRootPart.Font = Enum.Font.SourceSans
HumanoidRootPart.Text = ""
HumanoidRootPart.TextColor3 = Color3.fromRGB(0, 0, 0)
HumanoidRootPart.TextSize = 14.000

LeftUpperArm.Name = "LeftUpperArm"
LeftUpperArm.Parent = BodyMain
LeftUpperArm.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
LeftUpperArm.BorderColor3 = Color3.fromRGB(0, 0, 0)
LeftUpperArm.BorderSizePixel = 0
LeftUpperArm.Position = UDim2.new(0.180272102, 0, 0.314437479, 0)
LeftUpperArm.Size = UDim2.new(0.112244897, 0, 0.227125898, 0)
LeftUpperArm.Font = Enum.Font.SourceSans
LeftUpperArm.Text = ""
LeftUpperArm.TextColor3 = Color3.fromRGB(0, 0, 0)
LeftUpperArm.TextSize = 14.000

RightUpperArm.Name = "RightUpperArm"
RightUpperArm.Parent = BodyMain
RightUpperArm.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
RightUpperArm.BorderColor3 = Color3.fromRGB(0, 0, 0)
RightUpperArm.BorderSizePixel = 0
RightUpperArm.Position = UDim2.new(0.683673441, 0, 0.314437479, 0)
RightUpperArm.Size = UDim2.new(0.112244897, 0, 0.227125898, 0)
RightUpperArm.Font = Enum.Font.SourceSans
RightUpperArm.Text = ""
RightUpperArm.TextColor3 = Color3.fromRGB(0, 0, 0)
RightUpperArm.TextSize = 14.000

RightFoot.Name = "RightFoot"
RightFoot.Parent = BodyMain
RightFoot.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
RightFoot.BorderColor3 = Color3.fromRGB(0, 0, 0)
RightFoot.BorderSizePixel = 0
RightFoot.Position = UDim2.new(0.523809552, 0, 0.557513297, 0)
RightFoot.Size = UDim2.new(0.112244897, 0, 0.227125898, 0)
RightFoot.Font = Enum.Font.SourceSans
RightFoot.Text = ""
RightFoot.TextColor3 = Color3.fromRGB(0, 0, 0)
RightFoot.TextSize = 14.000

LeftFoot.Name = "LeftFoot"
LeftFoot.Parent = BodyMain
LeftFoot.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
LeftFoot.BorderColor3 = Color3.fromRGB(0, 0, 0)
LeftFoot.BorderSizePixel = 0
LeftFoot.Position = UDim2.new(0.350340128, 0, 0.557513297, 0)
LeftFoot.Size = UDim2.new(0.112244897, 0, 0.227125898, 0)
LeftFoot.Font = Enum.Font.SourceSans
LeftFoot.Text = ""
LeftFoot.TextColor3 = Color3.fromRGB(0, 0, 0)
LeftFoot.TextSize = 14.000

-- Scripts:

local function VZQIRK_fake_script() -- BodyMain.LocalScript 
	local script = Instance.new('LocalScript', BodyMain)

	local HeadTrue = false
	local HumanoidRootPartTrue = false
	local LUpArm = false
	local Lfoot = false
	local RUpArm = false
	local Rfoot = false

	script.Parent.Head.MouseButton1Click:Connect(function()
		if HeadTrue == false or HumanoidRootPartTrue == true or LUpArm == true or Lfoot == true or RUpArm == true or Rfoot == true then
			local HeadTrue = true
			local HumanoidRootPartTrue = false
			local LUpArm = false
			local Lfoot = false
			local RUpArm = false
			local Rfoot = false
			script.Parent.Head.BackgroundColor3 = Color3.fromRGB(108, 30, 157)
			script.Parent.RightFoot.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			script.Parent.HumanoidRootPart.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			script.Parent.RightUpperArm.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			script.Parent.LeftFoot.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			script.Parent.LeftUpperArm.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		end
	end)

	script.Parent.HumanoidRootPart.MouseButton1Click:Connect(function()
		if HumanoidRootPartTrue == false or HeadTrue == true or LUpArm == true or Lfoot == true or RUpArm == true or Rfoot == true then
			local HeadTrue = false
			local HumanoidRootPartTrue = true
			local LUpArm = false
			local Lfoot = false
			local RUpArm = false
			local Rfoot = false
			script.Parent.HumanoidRootPart.BackgroundColor3 = Color3.fromRGB(108, 30, 157)
			script.Parent.Head.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			script.Parent.RightFoot.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			script.Parent.RightUpperArm.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			script.Parent.LeftFoot.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			script.Parent.LeftUpperArm.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		end
	end)

	script.Parent.LeftUpperArm.MouseButton1Click:Connect(function()
		if LUpArm == false or HeadTrue == true or HumanoidRootPartTrue == true or Lfoot == true or RUpArm == true or Rfoot == true then
			local HeadTrue = false
			local HumanoidRootPartTrue = false
			local LUpArm = true
			local Lfoot = false
			local RUpArm = false
			local Rfoot = false
			script.Parent.LeftUpperArm.BackgroundColor3 = Color3.fromRGB(108, 30, 157)
			script.Parent.Head.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			script.Parent.HumanoidRootPart.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			script.Parent.RightUpperArm.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			script.Parent.RightFoot.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			script.Parent.LeftFoot.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		end
	end)

	script.Parent.LeftFoot.MouseButton1Click:Connect(function()
		if Lfoot == false or HeadTrue == true or HumanoidRootPartTrue == true or LUpArm == true or RUpArm == true or Rfoot == true then
			local HeadTrue = false
			local HumanoidRootPartTrue = false
			local LUpArm = false
			local Lfoot = true
			local RUpArm = false
			local Rfoot = false
			script.Parent.LeftFoot.BackgroundColor3 = Color3.fromRGB(108, 30, 157)
			script.Parent.Head.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			script.Parent.HumanoidRootPart.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			script.Parent.RightFoot.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			script.Parent.RightUpperArm.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			script.Parent.LeftUpperArm.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		end
	end)

	script.Parent.RightUpperArm.MouseButton1Click:Connect(function()
		if RUpArm == false or HeadTrue == true or HumanoidRootPartTrue == true or LUpArm == true or Lfoot == true or Rfoot == true then
			local HeadTrue = false
			local HumanoidRootPartTrue = false
			local LUpArm = false
			local Lfoot = false
			local RUpArm = true
			local Rfoot = false
			script.Parent.RightUpperArm.BackgroundColor3 = Color3.fromRGB(108, 30, 157)
			script.Parent.Head.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			script.Parent.HumanoidRootPart.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			script.Parent.RightFoot.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			script.Parent.LeftFoot.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			script.Parent.LeftUpperArm.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		end
	end)

	script.Parent.RightFoot.MouseButton1Click:Connect(function()
		if Rfoot == false or HeadTrue == true or HumanoidRootPartTrue == true or LUpArm == true or Lfoot == true or RUpArm == true then
			local HeadTrue = false
			local HumanoidRootPartTrue = false
			local LUpArm = false
			local Lfoot = false
			local RUpArm = false
			local Rfoot = true
			script.Parent.RightFoot.BackgroundColor3 = Color3.fromRGB(108, 30, 157)
			script.Parent.Head.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			script.Parent.HumanoidRootPart.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			script.Parent.RightUpperArm.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			script.Parent.LeftFoot.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			script.Parent.LeftUpperArm.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		end
	end)
end
coroutine.wrap(VZQIRK_fake_script)()


local TargFovCircle = Drawing.new("Circle")
TargFovCircle.Thickness = 1.5

local TargHighlight = Instance.new("Highlight", CoreGui)
TargHighlight.Name = "Da Hood Star"

local CamHighlight = Instance.new("Highlight", CoreGui)

local CamFovCircle = Drawing.new("Circle")
CamFovCircle.Thickness = 1.5
CamFovCircle.Visible = false

local OrbitSpeed = 0

local OrbitSpeedCf = 0

local TargetAimbotA = {
	RealPred = 0,
	RealJumpOfsset = 0,
	
	Enabled = false, 
	Krnb = nil, 

	HitParts = {"HumanoidRootPart"}, 
	RealHitPart = nil, 


	Notify = false, 

	Hitboxenab = false,
	hitboxsz = 1,

	Highlight = false, 

	UseFov = false,
	TargetFov = false
}

local TargetStrafe = {
	Enabled = false, 

	Speed = 1, 
	Distance = 1, 
	Height = 1,
	RandomS = false,
}

local CameraAimbot = {
	Enabled = false, 
	KeyBond = nil, 

	Prediction = 0, 
	RealPrediction = nil, 

	Resolver = false, 
	ResolverType = "Recalculate", 

	JumpOffset = 0, 
	RealJumpOffset = nil, 

	HitPart = "Head", 
	RealHitPart = "Head", 

	UseAirPart = false, 
	AirPart = "LowerTorso", 
	AirSmooth = 0,
	AirCheckType = "Once in Air", 

	AutoPred = false,
	AutoPredSlider2 = 50,
	AutoPredSliderbig = 0,
	AutoPredSliderSmall = 0,

	ShakeEnab = false,
	ShakePower = 0,

	Stats = false,
	Statsintarget = false,


	Notify = false, 
	KoCheck = false, 

	Tracer = false,
	DotCam = false,
	DotCamCursor = false,
	Highlight = false, 

	AimMethod = "Camera", 

	Smoothing = false, 
	SmoothnessX = 0,
	SmoothnessY = 0,
	SmoothingStyle = "Linear",


	UseFov = false,
	TargetFov = false,

	Hitboxenab = false,
	hitboxsz = 10,
	
	MenuHitPartVs = false,
}

local CamStrafe = {
	Enabled = false, 

	Speed = 1, 
	Distance = 1, 
	Height = 1,
	RandomS = false,
	
	TestStrafe = false,
}

local MoveMentSet = {
	SpeedEnabled = false, 
	SpeedAmount = 1, 
	
	FlightEnabled = false, 
	FlightAmount = 1
}

local Utilities = {
	NoJumpCooldown = false, 
	NoSlowdown = false, 

	AutoStomp = false,
	AntiStomp = false,
}

local AutoFarm = {
	AutoMuscle = false,
}

local Esp = {
	Esp = false,
	EspBox = false,
	EspBoxColor = Color3.fromRGB(255, 255, 255),
	
	EspName = false,
	EspColorName = Color3.fromRGB(255, 255, 255),
}


-- Functions

local function ClostPlrNowNew(Part, UseFov, FovCircle)
	local Distance, Closest = math.huge, nil

	for I, Target in pairs(Players:GetPlayers()) do
		if Target ~= LocalPlr then
			local Position = Workspace.CurrentCamera:WorldToViewportPoint(Target.Character[Part].Position)
			local Magnitude = (Vector2.new(Position.X, Position.Y) - UserInputService:GetMouseLocation()).Magnitude

			if UseFov then
				if Magnitude < Distance and Magnitude < FovCircle.Radius then
					Closest = Target
					Distance = Magnitude
				end
			else
				if Magnitude < Distance then
					Closest = Target
					Distance = Magnitude
				end
			end
		end
	end

	return Closest
end

local function Rezolv(Target, Aimbot)
	local Part = Target.Character[Aimbot.RealHitPart]

	local CurrentPosition = Part.Position
	local CurrentTime = tick()

	wait()

	local NewPosition = Part.Position
	local NewTime = tick()
	local DistanceTraveled = (NewPosition - CurrentPosition)
	local TimeInterval = NewTime - CurrentTime
	local Velocity = DistanceTraveled / TimeInterval

	CurrentPosition = NewPosition
	CurrentTime = NewTime

	if Aimbot.ResolverType == "MoveDirection" then
		return Target.Character.Humanoid.MoveDirection * Target.Character.Humanoid.WalkSpeed
	end

	return Velocity
end

local function AimRd()
	if TargetAimbotA.Enabled and TargB1nd then
		if game.PlaceId == 2788229376 or game.PlaceId == 7213786345 or game.PlaceId == 16033173781 then
			if TargetAimbotA.Resolver then
				ReplicatedStorage.MainEvent:FireServer("UpdateMousePos", TargetPlr.Character[TargetAimbotA.RealHitPart].Position + Vector3.new(0, TargetAimbotA.RealJumpOffset, 0) + (TargResolvePos * TargetAimbotA.RealPrediction))
			else
				ReplicatedStorage.MainEvent:FireServer("UpdateMousePos", TargetPlr.Character[TargetAimbotA.RealHitPart].Position + Vector3.new(0, TargetAimbotA.RealJumpOffset, 0) + (TargetPlr.Character[TargetAimbotA.RealHitPart].AssemblyLinearVelocity * TargetAimbotA.RealPrediction))
			end
		else
			if TargetAimbotA.Resolver then
				ReplicatedStorage.MainEvent:FireServer("UpdateMousePos", TargetPlr.Character[TargetAimbotA.RealHitPart].Position + Vector3.new(0, TargetAimbotA.RealJumpOffset, 0) + (TargResolvePos * TargetAimbotA.RealPrediction))
			else
				ReplicatedStorage.MainEvent:FireServer("UpdateMousePos", TargetPlr.Character[TargetAimbotA.RealHitPart].Position + Vector3.new(0, TargetAimbotA.RealJumpOffset, 0) + (TargetPlr.Character[TargetAimbotA.RealHitPart].AssemblyLinearVelocity * TargetAimbotA.RealPrediction))
			end
		end
	end
end



local BestHck = B1Lib:CreateWindow("by Sasha2611", Vector2.new(500, 600), Enum.KeyCode.RightControl)

-- Tabs

local MainTabAim = BestHck:CreateTab("Aimbot")
local MiscTabMisc = BestHck:CreateTab("Misc")
local AutoFarmTab = BestHck:CreateTab("AutoFarm")
local EspTab = BestHck:CreateTab("Esp")
-- Sectors

-- MAIN

local TargetAimbotSec = MainTabAim:CreateSector("Target Aimbot", "left")
local TargetStrafeSec = MainTabAim:CreateSector("Orbit Strafe", "left")

local CameraAimbotSec = MainTabAim:CreateSector("Camera Aimbot", "right")
local HitboxCamSec = MainTabAim:CreateSector("HitBox", "right")
local CamTargetStrafe = MainTabAim:CreateSector("Target Strafe", "right")
--esp

local EspSecLeft = EspTab:CreateSector("Player Esp", "left")
local abc = MiscTabMisc:CreateSector("Soon!", "right")
-- MISC

local UtilitiesSec = MiscTabMisc:CreateSector("Utilities", "left")
local MovementSec = MiscTabMisc:CreateSector("Movement", "left")
local SelfDotSec = MiscTabMisc:CreateSector("Self Dot", "left")
local TargetPlayerSec = MiscTabMisc:CreateSector("Target Player", "left")

local AntiLockSec = MiscTabMisc:CreateSector("Network Desync", "right")

--autofarm
local AutoMuscleSec = AutoFarmTab:CreateSector("Auto Muscle", "left")
local Soon1111 = AutoFarmTab:CreateSector("Auto Soon!", "right")
--end autofarm

TargetAimbotSec:AddToggle("Enabled", false, function(Value)
	TargetAimbotA.Enabled = Value
end, "TargetEnabled")

TargetAimbotSec:AddKeybind("Keybind", nil, function(Value)
	TargetAimbotA.Krnb = Value
end, "BUndtarg1t")


TargetAimbotSec:AddToggle("Hitbox Enable", false, function(Value)
	TargetAimbotA.Hitboxenab = Value
end, "hitboxenab")

TargetAimbotSec:AddSlider("Hitbox Size", 1, 1, 70, 1, function(Value)
	TargetAimbotA.hitboxsz = Value
end, "hitboszx")

TargetAimbotSec:AddToggle("Notify", false, function(Value)
	TargetAimbotA.Notify = Value
end, "TargetNotify")

local TargHighlightTog = TargetAimbotSec:AddToggle("Highlight", false, function(Value)
	TargetAimbotA.Highlight = Value
end, "TargetHighlight")

TargHighlightTog:AddColorpicker(Color3.fromRGB(210, 210, 210), function(Value)
	TargHighlight.FillColor = Value
end, "TargetHighlightFillColor")

TargHighlightTog:AddColorpicker(Color3.fromRGB(25, 25, 25), function(Value)
	TargHighlight.OutlineColor = Value
end, "TargetHighlightOutlineColor")

local TargStrafeTog = TargetStrafeSec:AddToggle("Orbit Strafe", false, function(Value)
	TargetStrafe.Enabled = Value
end, "Orbitstr")

TargStrafeTog:AddKeybind(nil, "OrbitStrafeKeyBind")

TargetStrafeSec:AddSlider("Speed", 1, 1, 70, 1, function(Value)
	TargetStrafe.Speed = Value
end, "TargetStrafeSpeed")

TargetStrafeSec:AddSlider("Distance", 1, 1, 30, 2, function(Value)
	TargetStrafe.Distance = Value
end, "TargetStrafeDistance")

TargetStrafeSec:AddSlider("Height", 1, 1, 30, 2, function(Value)
	TargetStrafe.Height = Value
end, "TargetStrafeHeight")

local TargStrafeTog = TargetStrafeSec:AddToggle("Random", false, function(Value)
	TargetStrafe.RandomS = Value
end, "RandomOrbit")

TargetAimbotSec:AddToggle("Use FOV", false, function(Value)
	TargetAimbotA.UseFov = Value
end, "TargetUseFOV")

TargetAimbotSec:AddToggle("Target on FOV", false, function(Value)
	TargetAimbotA.TargetFov = Value
end, "TargetTargeOnFOV")

local F0vvos = TargetAimbotSec:AddToggle("FOV Visible", false, function(Value)
	TargFovCircle.Visible = Value
end, "nayge")

F0vvos:AddColorpicker(Color3.fromRGB(180, 180, 180), function(Value)
	TargFovCircle.Color = Value
end, "ee2feege")

TargetAimbotSec:AddToggle("FOV Filled", false, function(Value)
	TargFovCircle.Filled = Value
end, "geh3ga")

TargetAimbotSec:AddSlider("FOV Transparency", 0, 1, 1, 100, function(Value)
	TargFovCircle.Transparency = Value
end, "tj4wfe")

TargetAimbotSec:AddSlider("FOV Thickness", 1, 1.5, 10, 10, function(Value)
	TargFovCircle.Thickness = Value
end, "tj4wfe")

TargetAimbotSec:AddSlider("FOV Size", 5, 80, 500, 1, function(Value)
	TargFovCircle.Radius = Value * 2
end, "wr3rr3qr3")

--end target aim

--cameraaim

CameraAimbotSec:AddToggle("Cam Enab", false, function(Value)
	CameraAimbot.Enabled = Value
end, "CamE1nab")

CameraAimbotSec:AddKeybind("Keybind", nil, function(Value)
	CameraAimbot.KeyBond = Value
end, "CameraKeybind")

CameraAimbotSec:AddToggle("HitPart Menu", false, function(Value)
	BodyMain.Visible = Value
end, "CamK0ch1ck")

CameraAimbotSec:AddTextbox("Prediction", nil, function(Value)
	CameraAimbot.Prediction = Value
	CameraAimbot.RealPrediction = Value
end, "CameraPrediction")


CameraAimbotSec:AddToggle("Notify", false, function(Value)
	CameraAimbot.Notify = Value
end, "CamNat")

CameraAimbotSec:AddToggle("KO Check", false, function(Value)
	CameraAimbot.KoCheck = Value
end, "CamK0ch1ck")

local CamHighlightTog = CameraAimbotSec:AddToggle("Highlight", false, function(Value)
	CameraAimbot.Highlight = Value
end, "CamH1gligh")

CamHighlightTog:AddColorpicker(Color3.fromRGB(210, 210, 210), function(Value)
	CamHighlight.FillColor = Value
end, "fafag")

CamHighlightTog:AddColorpicker(Color3.fromRGB(25, 25, 25), function(Value)
	CamHighlight.OutlineColor = Value
end, "faw")

CameraAimbotSec:AddToggle("Auto Pred", false, function(Value)
	CameraAimbot.AutoPred = Value
end, "CameraAutoPred")

CameraAimbotSec:AddSlider("Auto Pred Multiply", 0, 0, 1, 200, function(Value)
	CameraAimbot.AutoPredSliderbig = Value
end, "AutoPredSliderBig")

CameraAimbotSec:AddSlider("Auto Pred Plus", 0, 0, 1, 200, function(Value)
	CameraAimbot.AutoPredSliderSmall = Value
end, "AutoPredSliderPlus")

CameraAimbotSec:AddToggle("Use FOV", false, function(Value)
	CameraAimbot.UseFov = Value
end, "fwaf")

CameraAimbotSec:AddToggle("FOV On Target", false, function(Value)
	CameraAimbot.TargetFov = Value
end, "agega")

local CamFovTog = CameraAimbotSec:AddToggle("FOV Visible", false, function(Value)
	CamFovCircle.Visible = Value
end, "vzvz")

CamFovTog:AddColorpicker(Color3.fromRGB(180, 180, 180), function(Value)
	CamFovCircle.Color = Value
end, "hthr")

CameraAimbotSec:AddToggle("FOV Filled", false, function(Value)
	CamFovCircle.Filled = Value
end, "qwrs")

CameraAimbotSec:AddSlider("FOV Transparency", 0, 1, 1, 100, function(Value)
	CamFovCircle.Transparency = Value
end, "DWD")

CameraAimbotSec:AddSlider("FOV Size", 5, 80, 500, 1, function(Value)
	CamFovCircle.Radius = Value * 2
end, "dadag")

HitboxCamSec:AddToggle("Hitbox Enabled", false, function(Value)
	CameraAimbot.Hitboxenab = Value
end, "hitboxenab")

HitboxCamSec:AddSlider("Hitbox Size", 1, 1, 50, 1, function(Value)
	CameraAimbot.hitboxsz = Value
end, "hitboszx")

local CamSto = CamTargetStrafe:AddToggle("Target Strafe", false, function(Value)
	CamStrafe.Enabled = Value
end, "TargetStrafe")

CamSto:AddKeybind(nil, "OrbitStrafeKeyBind")

CamTargetStrafe:AddSlider("Speed", 1, 1, 70, 1, function(Value)
	CamStrafe.Speed = Value
end, "TargetStrafeSpeed")

CamTargetStrafe:AddSlider("Distance", 1, 1, 30, 2, function(Value)
	CamStrafe.Distance = Value
end, "TargetStrafeDistance")

CamTargetStrafe:AddSlider("Height", 1, 1, 30, 2, function(Value)
	CamStrafe.Height = Value
end, "TargetStrafeHeight")

local camstrafrandom = CamTargetStrafe:AddToggle("Random", false, function(Value)
	CamStrafe.RandomS = Value
end, "RandomOrbit")

local camstrafrandom = CamTargetStrafe:AddToggle("Test Strafe", false, function(Value)
	CamStrafe.TestStrafe = Value
end, "RandomOrbit")

--endcamaim

--utilities
UtilitiesSec:AddToggle("Anti Stomp", false, function(Value)
	Utilities.AntiStomp = Value
end, "antist0mp")

UtilitiesSec:AddToggle("Auto Stomp", false, function(Value)
	Utilities.AutoStomp = Value
end, "aut0mp")

UtilitiesSec:AddToggle("No Slowdown", false, function(Value)
	Utilities.NoSlowdown = Value
end, "NoSlowdown")

UtilitiesSec:AddToggle("No Jump Cooldown", false, function(Value)
	Utilities.NoJumpCooldown = Value
end, "NoJumpCooldown")

--end utilities

--movement
local CframeAnatura = MovementSec:AddToggle("CFrame Enabled", false, function(Value)
	MoveMentSet.SpeedEnabled = Value
end, "Print")

CframeAnatura:AddKeybind(nil, "CFrameKeybind")

MovementSec:AddSlider("CFrame Amount", 1, 1, 5000, 1, function(Value)
	MoveMentSet.SpeedAmount = Value / 1000
end, "SpeedAmount")

local FlightTog = MovementSec:AddToggle("Fly Enabled", false, function(Value)
	MoveMentSet.FlightEnabled = Value
end, "Flight")

FlightTog:AddKeybind(nil, "FlyKeybind")

MovementSec:AddSlider("Fly Amount", 1, 1, 20000, 1, function(Value)
	MoveMentSet.FlightAmount = Value / 20
end, "FlightAmount")
--endmovement

--esp Button

EspSecLeft:AddToggle("Esp Enabled", false, function(Value)
	Esp.Esp = Value
end, "EspEnabled")

local ESPBOXDD = EspSecLeft:AddToggle("Box", false, function(Value)
	Esp.EspBox = Value
end, "ESPBOXplayer")

ESPBOXDD:AddColorpicker(Color3.fromRGB(210, 210, 210), function(Value)
	Esp.EspBoxColor = Value
end, "EspBoxCc")

local ESPNAME = EspSecLeft:AddToggle("Name", false, function(Value)
	Esp.EspName = Value
end, "espdistance")

ESPNAME:AddColorpicker(Color3.fromRGB(210, 210, 210), function(Value)
	Esp.EspColorName = Value
end, "espdistancecolor")
--esp end

--autofarm

AutoMuscleSec:AddToggle("Enabled", false, function(Value)
	AutoFarm.AutoMuscle = Value
end, "TargetEnabled")

--endautofarm

RunService.Heartbeat:Connect(function()
	if MoveMentSet.FlightEnabled then
		local FlyVelocity = Vector3.new(0, 0, 0)

		if not UserInputService:GetFocusedTextBox() then
			if UserInputService:IsKeyDown(Enum.KeyCode.W) then
				FlyVelocity = FlyVelocity + (Workspace.CurrentCamera.CoordinateFrame.lookVector * MoveMentSet.FlightAmount)
			end

			if UserInputService:IsKeyDown(Enum.KeyCode.A) then
				FlyVelocity = FlyVelocity + (Workspace.CurrentCamera.CoordinateFrame.rightVector * -MoveMentSet.FlightAmount)
			end

			if UserInputService:IsKeyDown(Enum.KeyCode.S) then
				FlyVelocity = FlyVelocity + (Workspace.CurrentCamera.CoordinateFrame.lookVector * -MoveMentSet.FlightAmount)
			end

			if UserInputService:IsKeyDown(Enum.KeyCode.D) then
				FlyVelocity = FlyVelocity + (Workspace.CurrentCamera.CoordinateFrame.rightVector * MoveMentSet.FlightAmount)
			end
		end

		LocalPlr.Character.HumanoidRootPart.AssemblyLinearVelocity = FlyVelocity
		LocalPlr.Character.Humanoid:ChangeState("Freefall")
	end
end)


--Stepped Function
RunService.Stepped:Connect(function()
	if MoveMentSet.SpeedEnabled then
		LocalPlr.Character.HumanoidRootPart.CFrame = LocalPlr.Character.HumanoidRootPart.CFrame + LocalPlr.Character.Humanoid.MoveDirection * MoveMentSet.SpeedAmount
	end
end)


RunService.Stepped:Connect(function()
	if Esp.Esp then
		Sense.teamSettings.enemy.enabled = true
	else
		Sense.teamSettings.enemy.enabled = false
	end

	if Esp.Esp and Esp.EspBox then
		Sense.teamSettings.enemy.box = true
	else
		Sense.teamSettings.enemy.box = false
	end			

	if Esp.Esp and Esp.EspBoxColor then
		Sense.teamSettings.enemy.boxColor = { Esp.EspBoxColor, 1 }
	end

	if Esp.Esp and Esp.EspName then
		Sense.teamSettings.enemy.name = true
	else
		Sense.teamSettings.enemy.name = false
	end

	if Esp.Esp and Esp.EspColorName then
		Sense.teamSettings.enemy.nameColor = { Esp.EspColorName, 1 }

	end
end)

RunService.Stepped:Connect(function()
	if Utilities.AutoStomp then
		ReplicatedStorage.MainEvent:FireServer("Stomp")
	end
end)

RunService.Stepped:Connect(function()
	if Utilities.AntiStomp and LocalPlr.Character.Humanoid.Health <= 2 then
		if LocalPlr.Character and LocalPlr.Character:FindFirstChild("Humanoid") then
			LocalPlr.Character.Humanoid.Health = 0
			game.Players.RespawnTime = 2
		end
	end
end)


RunService.Stepped:Connect(function()
	if Utilities.NoSlowdown then
		local Slowdowns = LocalPlr.Character.BodyEffects.Movement:FindFirstChild("NoJumping") or LocalPlr.Character.BodyEffects.Movement:FindFirstChild("ReduceWalk") or LocalPlr.Character.BodyEffects.Movement:FindFirstChild("NoWalkSpeed")

		if Slowdowns then
			Slowdowns:Destroy()
		end

		if LocalPlr.Character.BodyEffects.Reload.Value then
			LocalPlr.Character.BodyEffects.Reload.Value = false
		end

		--[[
		if LocalPlr.Character.BodyEffects.Reloading.Value then
			LocalPlr.Character.BodyEffects.Reloading.Value = false
		end
		--]]
	end
end)

RunService.Stepped:Connect(function()
	LocalPlr.Character.Humanoid.UseJumpPower = not Utilities.NoJumpCooldown
end)
--Aim

do
	for I, Tool in pairs(LocalPlr.Backpack:GetChildren()) do
		if Tool:IsA("Tool") and not Connections[Tool] then
			Connections[Tool] = Tool.Activated:Connect(AimRd)
		end
	end

	for I, Tool in pairs(LocalPlr.Character:GetChildren()) do
		if Tool:IsA("Tool") and not Connections[Tool] then
			Connections[Tool] = Tool.Activated:Connect(AimRd)
		end
	end

	LocalPlr.Character.ChildAdded:Connect(function(Tool)
		if Tool:IsA("Tool") and not Connections[Tool] then
			Connections[Tool] = Tool.Activated:Connect(AimRd)
		end
	end)

	LocalPlr.CharacterAdded:Connect(function(Tool)
		Tool.ChildAdded:Connect(function(Tool)
			if Tool:IsA("Tool") and not Connections[Tool] then
				Connections[Tool] = Tool.Activated:Connect(AimRd)
			end
		end)
	end)
end

RunService.Heartbeat:Connect(function()
	if TargetAimbotA.Enabled and TargB1nd then
		TargResolvePos = Rezolv(TargetPlr, TargetAimbotA)
	end
end)

RunService.Heartbeat:Connect(function()
	if CameraAimbot.Enabled and CamB1nd then
		CamResolvePos = Rezolv(CamlockPlr, CameraAimbot)
	end
end)

RunService.Stepped:Connect(function()
	if CameraAimbot.Enabled and CamB1nd and CamlockPlr.Character.Humanoid:GetState() == Enum.HumanoidStateType.Freefall then
		CameraAimbot.RealJumpOffset = CameraAimbot.JumpOffset * CameraAimbot.AirSmooth
	else
		CameraAimbot.RealJumpOffset = 0
	end
end)

RunService.Stepped:Connect(function()
	local AirCheckType

	if CameraAimbot.Enabled and CamB1nd and CameraAimbot.UseAirPart then
		if CameraAimbot.AirCheckType == "Once in Air" then
			AirCheckType = CamlockPlr.Character.Humanoid.FloorMaterial == Enum.Material.Air
		else
			AirCheckType = CamlockPlr.Character.Humanoid:GetState() == Enum.HumanoidStateType.Freefall
		end
	end

	if CameraAimbot.Enabled and CamB1nd and CameraAimbot.UseAirPart and AirCheckType then
		CameraAimbot.RealHitPart = CameraAimbot.AirPart
	else
		CameraAimbot.RealHitPart = CameraAimbot.HitPart
	end
end)

RunService.RenderStepped:Connect(function()
	if CameraAimbot.Enabled and CamB1nd and CameraAimbot.AutoPred then
		CameraAimbot.RealPrediction = math.round(Stats.Network.ServerStatsItem["Data Ping"]:GetValue()) / 200 * CameraAimbot.AutoPredSliderbig + CameraAimbot.AutoPredSliderSmall
	else
		CameraAimbot.RealPrediction = CameraAimbot.Prediction
	end
end)

RunService.Heartbeat:Connect(function()
	if CameraAimbot.Enabled and CamB1nd and CameraAimbot.Hitboxenab then
		CamlockPlr.Character.HumanoidRootPart.Size = Vector3.new(CameraAimbot.hitboxsz,CameraAimbot.hitboxsz,CameraAimbot.hitboxsz)
		CamlockPlr.Character.HumanoidRootPart.Transparency = 0.9
		CamlockPlr.Character.HumanoidRootPart.BrickColor = BrickColor.new("White")
		CamlockPlr.Character.HumanoidRootPart.Material = "Neon"
		CamlockPlr.Character.HumanoidRootPart.CanCollide = false
	else
		CamlockPlr.Character.HumanoidRootPart.Size = Vector3.new(1,1,1)
		CamlockPlr.Character.HumanoidRootPart.Transparency = 1
		CamlockPlr.Character.HumanoidRootPart.BrickColor = BrickColor.new("White")
		CamlockPlr.Character.HumanoidRootPart.Material = "Plastic"
		CamlockPlr.Character.HumanoidRootPart.CanCollide = false
	end
end)

RunService.RenderStepped:Connect(function(Setting)
	if CameraAimbot and CamB1nd and CameraAimbot.ShakeEnab then
		local bangsandy = Vector3.new(math.random(-CameraAimbot.ShakePower, CameraAimbot.ShakePower), math.random(-CameraAimbot.ShakePower, CameraAimbot.ShakePower), math.random(-CameraAimbot.ShakePower, CameraAimbot.ShakePower)) * 0.1
		local LookPosition = CFrame.new(Camera.CFrame.p, CamlockPlr.Character[CameraAimbot.HitPart].Position + (Vector3.new(CamlockPlr.Character[CameraAimbot.HitPart].Velocity.X,CamlockPlr.Character[CameraAimbot.HitPart].AssemblyAngularVelocity.Y*0.1,CamlockPlr.Character[CameraAimbot.HitPart].Velocity.Z)*CameraAimbot.Prediction))+bangsandy
		Camera.CFrame = Camera.CFrame:Lerp(LookPosition, CameraAimbot.SmoothnessX, CameraAimbot.SmoothnessY)
	end
end)

RunService.RenderStepped:Connect(function()
	if CameraAimbot.Enabled and CamB1nd then
		if CameraAimbot.AimMethod == "Camera" then
			if CameraAimbot.Resolver then
				if CameraAimbot.Smoothing then
					Workspace.CurrentCamera.CFrame = Workspace.CurrentCamera.CFrame:Lerp(CFrame.new(Workspace.CurrentCamera.CFrame.p, CamlockPlr.Character[CameraAimbot.RealHitPart].Position + Vector3.new(CameraAimbot.RealPrediction, CameraAimbot.RealJumpOffset, 0) + (Rezolv(CamlockPlr, CameraAimbot) * CameraAimbot.RealPrediction)), CameraAimbot.SmoothnessX, Enum.EasingStyle == CameraAimbot.SmoothingStyle, Enum.EasingDirection.InOut, CameraAimbot.SmoothnessY, Enum.EasingStyle == CameraAimbot.SmoothingStyle, Enum.EasingDirection.InOut)
				else
					Workspace.CurrentCamera.CFrame = CFrame.new(Workspace.CurrentCamera.CFrame.p, CamlockPlr.Character[CameraAimbot.RealHitPart].Position + Vector3.new(0, CameraAimbot.RealJumpOffset, 0) + (Rezolv(CamlockPlr, CameraAimbot) * CameraAimbot.RealPrediction))
				end
			else
				if CameraAimbot.Smoothing then
					Workspace.CurrentCamera.CFrame = Workspace.CurrentCamera.CFrame:Lerp(CFrame.new(Workspace.CurrentCamera.CFrame.p, CamlockPlr.Character[CameraAimbot.RealHitPart].Position + Vector3.new(CameraAimbot.RealPrediction, CameraAimbot.RealJumpOffset, 0) + (CamlockPlr.Character[CameraAimbot.RealHitPart].AssemblyLinearVelocity * CameraAimbot.RealPrediction)), CameraAimbot.SmoothnessX, Enum.EasingStyle == CameraAimbot.SmoothingStyle, Enum.EasingDirection.InOut, CameraAimbot.SmoothnessY, Enum.EasingStyle == CameraAimbot.SmoothingStyle, Enum.EasingDirection.InOut)
				else
					Workspace.CurrentCamera.CFrame = CFrame.new(Workspace.CurrentCamera.CFrame.p, CamlockPlr.Character[CameraAimbot.RealHitPart].Position + Vector3.new(0, CameraAimbot.RealJumpOffset, 0) + (CamlockPlr.Character[CameraAimbot.RealHitPart].AssemblyLinearVelocity * CameraAimbot.RealPrediction))


				end
			end
		else

			local Position

			if CameraAimbot.Resolver then
				Position = Workspace.CurrentCamera:WorldToViewportPoint(CamlockPlr.Character[CameraAimbot.RealHitPart].Position + Vector3.new(0, CameraAimbot.RealJumpOffset, 0) + (Rezolv(CamlockPlr, CameraAimbot) * CameraAimbot.RealPrediction))
			else
				Position = Workspace.CurrentCamera:WorldToViewportPoint(CamlockPlr.Character[CameraAimbot.RealHitPart].Position + Vector3.new(0, CameraAimbot.RealJumpOffset, 0) + (CamlockPlr.Character[CameraAimbot.RealHitPart].AssemblyLinearVelocity * CameraAimbot.RealPrediction))
			end

			if CameraAimbot.Smoothing then
				mousemoverel((Position.X - UserInputService:GetMouseLocation().X) * CameraAimbot.SmoothnessX, (Position.Y - UserInputService:GetMouseLocation().Y) * CameraAimbot.SmoothnessY)
			else
				mousemoverel(Position.X - UserInputService:GetMouseLocation().X, Position.Y - UserInputService:GetMouseLocation().Y)
			end--тут
		end
	end
end)

RunService.Stepped:Connect(function()
	if Head.BackgroundColor3 == Color3.fromRGB(108, 30, 157) then
		CameraAimbot.HitPart = "Head"
	end
	
	if HumanoidRootPart.BackgroundColor3 == Color3.fromRGB(108, 30, 157) then
		CameraAimbot.HitPart = "HumanoidRootPart"
	end
	
	if LeftFoot.BackgroundColor3 == Color3.fromRGB(108, 30, 157) then
		CameraAimbot.HitPart = "LeftFoot"
	end
	
	if LeftUpperArm.BackgroundColor3 == Color3.fromRGB(108, 30, 157) then
		CameraAimbot.HitPart = "LeftUpperArm"
	end
	
	if RightFoot.BackgroundColor3 == Color3.fromRGB(108, 30, 157) then
		CameraAimbot.HitPart = "RightFoot"
	end
	
	if RightUpperArm.BackgroundColor3 == Color3.fromRGB(108, 30, 157) then
		CameraAimbot.HitPart = "RightUpperArm"
	end
end)

RunService.RenderStepped:Connect(function()
	if CameraAimbot.Enabled and CamB1nd and CameraAimbot.KoCheck and (CamlockPlr.Character.Humanoid.Health <= 1.15 or LocalPlr.Character.Humanoid.Health <= 1.15) then
		CamB1nd = false
	end
end)

RunService.RenderStepped:Connect(function()
	if CameraAimbot.Enabled and CamB1nd and CameraAimbot.Highlight then
		CamHighlight.Parent = CamlockPlr.Character
	else
		CamHighlight.Parent = CoreGui
	end
end)

RunService.RenderStepped:Connect(function()
	local Position, OnScreen

	if CameraAimbot.Enabled and CamB1nd and CamFovCircle.Visible then
		if CameraAimbot.Resolver then
			Position, OnScreen = Workspace.CurrentCamera:WorldToViewportPoint(CamlockPlr.Character[CameraAimbot.RealHitPart].Position + Vector3.new(0, CameraAimbot.RealJumpOffset, 0) + (CamResolvePos * CameraAimbot.RealPrediction))
		else
			Position, OnScreen = Workspace.CurrentCamera:WorldToViewportPoint(CamlockPlr.Character[CameraAimbot.RealHitPart].Position + Vector3.new(0, CameraAimbot.RealJumpOffset, 0) + (CamlockPlr.Character[CameraAimbot.RealHitPart].AssemblyLinearVelocity * CameraAimbot.RealPrediction))
		end
	end

	if CamFovCircle.Visible then
		CamFovCircle.Position = UserInputService:GetMouseLocation()
	end

	if CameraAimbot.TargetFov then
		if OnScreen then
			CamFovCircle.Position = Vector2.new(Position.X, Position.Y)
		end
	end
end)

RunService.Heartbeat:Connect(function()
	if TargetAimbotA.Enabled and TargB1nd and TargetStrafe.Enabled then
		OrbitSpeed = OrbitSpeed + TargetStrafe.Speed

		LocalPlr.Character.HumanoidRootPart.CFrame = TargetPlr.Character.HumanoidRootPart.CFrame * CFrame.Angles(0, math.rad(OrbitSpeed), 0) * CFrame.new(0, TargetStrafe.Height, TargetStrafe.Distance)
	end
	
	
	if TargetStrafe.Enabled and TargetStrafe.RandomS then
		LocalPlr.Character.HumanoidRootPart.CFrame = TargetPlr.Character.HumanoidRootPart.CFrame * CFrame.Angles(0, math.rad(math.random(10,100)), 0) * CFrame.new(0, math.random(1,30), math.random(1,30))
	end
end)

RunService.Heartbeat:Connect(function()
	if CameraAimbot.Enabled and CamB1nd and CamStrafe.Enabled then
		OrbitSpeed = OrbitSpeed + CamStrafe.Speed

		LocalPlr.Character.HumanoidRootPart.CFrame = CamlockPlr.Character.HumanoidRootPart.CFrame * CFrame.Angles(0, math.rad(OrbitSpeed), 0) * CFrame.new(0, CamStrafe.Height, CamStrafe.Distance)
	end


	if CamStrafe.Enabled and CamStrafe.RandomS then
		LocalPlr.Character.HumanoidRootPart.CFrame = CamlockPlr.Character.HumanoidRootPart.CFrame * CFrame.Angles(0, math.rad(math.random(20,100)), 0) * CFrame.new(0, math.random(10,30), math.random(10,30))
	end

	if CameraAimbot.Enabled and CamStrafe.Enabled and CamB1nd and CamStrafe.TestStrafe then
		OrbitSpeedCf = OrbitSpeedCf + CamStrafe.Speed

		LocalPlr.Character.HumanoidRootPart.CFrame = CamlockPlr.Character.HumanoidRootPart.CFrame * CFrame.new(math.random(-10,10), math.random(0,0), math.random(-2,10))
		
		Workspace.CurrentCamera.CameraSubject = CamlockPlr.Character.Humanoid
	else
		Workspace.CurrentCamera.CameraSubject = LocalPlr.Character.Humanoid
	end
end)

RunService.RenderStepped:Connect(function()
	if TargetAimbotA.Enabled and TargB1nd and TargetAimbotA.Hitboxenab then
		TargetPlr.Character.HumanoidRootPart.Size = Vector3.new(TargetAimbotA.hitboxsz,TargetAimbotA.hitboxsz,TargetAimbotA.hitboxsz)
		TargetPlr.Character.HumanoidRootPart.Transparency = 0.9
		TargetPlr.Character.HumanoidRootPart.BrickColor = BrickColor.new("White")
		TargetPlr.Character.HumanoidRootPart.Material = "Neon"
		TargetPlr.Character.HumanoidRootPart.CanCollide = false
	else
		TargetPlr.Character.HumanoidRootPart.Size = Vector3.new(1,1,1)
		TargetPlr.Character.HumanoidRootPart.Transparency = 1
		TargetPlr.Character.HumanoidRootPart.BrickColor = BrickColor.new("White")
		TargetPlr.Character.HumanoidRootPart.Material = "Neon"
		TargetPlr.Character.HumanoidRootPart.CanCollide = false
	end
end)


RunService.Stepped:Connect(function()
	if TargetAimbotA.Enabled then
		TargetAimbotA.RealHitPart = TargetAimbotA.HitParts[math.random(#TargetAimbotA.HitParts)]
	end
end)

RunService.RenderStepped:Connect(function()
	if TargetAimbotA.Enabled and TargB1nd and TargetAimbotA.Highlight then
		TargHighlight.Parent = TargetPlr.Character
	else
		TargHighlight.Parent = CoreGui
	end
end)

RunService.RenderStepped:Connect(function()

	local Position, OnScreen

	if TargetAimbotA.Enabled and TargB1nd and TargFovCircle.Visible then
		if TargetAimbotA.Resolver then
			Position, OnScreen = Workspace.CurrentCamera:WorldToViewportPoint(TargetPlr.Character[TargetAimbotA.RealHitPart].Position + Vector3.new(0, TargetAimbotA.RealJumpOfsset, 0) + (TargResolvePos * TargetAimbotA.RealPred))
		else
			Position, OnScreen = Workspace.CurrentCamera:WorldToViewportPoint(TargetPlr.Character[TargetAimbotA.RealHitPart].Position + Vector3.new(0, TargetAimbotA.RealJumpOfsset, 0) + (TargetPlr.Character[TargetAimbotA.RealHitPart].AssemblyLinearVelocity * TargetAimbotA.RealPred))
		end
	end

	if TargFovCircle.Visible then
		TargFovCircle.Position = UserInputService:GetMouseLocation()
	end

	if TargetAimbotA.TargetFov then
		if OnScreen then
			TargFovCircle.Position = Vector2.new(Position.X, Position.Y)
		end
	end
end)

--autofarm

RunService.RenderStepped:Connect(function()
	if AutoFarm.AutoMuscle then
		local player = game.Players.LocalPlayer

		player.Character.HumanoidRootPart.CFrame = CFrame.new(-46.7554626, 20.0495949, -656.199829, 1, 0, 0, 0, 1, 0, 0, 0, 1)
		fireclickdetector(workspace.Ignored.Shop["[HeavyWeights] - $273"].ClickDetector)
		
		repeat wait(0.2)
			mouse1press()
			wait(0.2)
			mouse1release()
		until AutoFarm.AutoMuscle == false
	end
end)

--endautofarm


local notificationLibrary = loadstring(game:HttpGet("https://raw.githubusercontent.com/laagginq/ui-libraries/main/xaxas-notification/src.lua"))();
local notifications = notificationLibrary.new({            
	NotificationLifetime = 2, 
	NotificationPosition = "Middle",

	TextFont = Enum.Font.Code,
	TextColor = Color3.fromRGB(255, 255, 255),
	TextSize = 15,

	TextStrokeTransparency = 0, 
	TextStrokeColor = Color3.fromRGB(0, 0, 0)
});

notifications:BuildNotificationUI();

UserInputService.InputBegan:Connect(function(N3key)
	if TargetAimbotA.Enabled and N3key.KeyCode == TargetAimbotA.Krnb and not UserInputService:GetFocusedTextBox() then
		local Position, OnScreen = Workspace.CurrentCamera:WorldToViewportPoint(ClostPlrNowNew(TargetAimbotA.RealHitPart, TargetAimbotA.UseFov, TargFovCircle).Character[TargetAimbotA.RealHitPart].Position)

		if TargB1nd then
			TargB1nd = false

			if TargetAimbotA.Notify then
				notifications:Notify("UnTarget:" .. TargetPlr.DisplayName)
			end
		else
			if OnScreen then
				TargB1nd = true
				TargetPlr = ClostPlrNowNew(TargetAimbotA.RealHitPart, TargetAimbotA.UseFov, TargFovCircle)

				if TargetAimbotA.Notify then
					notifications:Notify("Target:".. TargetPlr.DisplayName)
				end
			end
		end
	end
end)

UserInputService.InputBegan:Connect(function(w2)
	if CameraAimbot.Enabled and w2.KeyCode == CameraAimbot.KeyBond and not UserInputService:GetFocusedTextBox() then
		local Position, OnScreen = Workspace.CurrentCamera:WorldToViewportPoint(ClostPlrNowNew(CameraAimbot.RealHitPart, CameraAimbot.UseFov, CamFovCircle).Character[CameraAimbot.RealHitPart].Position)

		if CamB1nd then
			CamB1nd = false
			if CameraAimbot.Notify then
				notifications:Notify("UnTarget:" .. CamlockPlr.DisplayName)
			end
		else
			if OnScreen then
				CamB1nd = true
				CamlockPlr = ClostPlrNowNew(CameraAimbot.RealHitPart, CameraAimbot.UseFov, CamFovCircle)

				if CameraAimbot.Notify then
					notifications:Notify("Target:" .. CamlockPlr.DisplayName)
				end
			end
		end
	end
end)


--aimend

--Hooks


local OriginalGetFenv; OriginalGetFenv = hookfunction(getrenv().getfenv, newcclosure(function(Level)
	if not checkcaller() then
		task.wait(15e15)
		return {sigma = function() return 0 end, balls = 1, tablehooked = {}}
	end
	return OriginalGetFenv(Level)
end))

for _, con in next, getconnections(workspace.CurrentCamera.Changed) do
	task.wait()
	con:Disable()
end
for _, con in next, getconnections(workspace.CurrentCamera:GetPropertyChangedSignal("CFrame")) do
	task.wait()
	con:Disable()
end
